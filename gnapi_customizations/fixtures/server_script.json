[
 {
  "actions": [],
  "allow_guest_to_view": 0,
  "api_method": null,
  "api_method_name": null,
  "beta": 0,
  "client_script": null,
  "color": null,
  "compatible": null,
  "condition": null,
  "custom": 1,
  "description": "Auto set employee for Custom Timesheet when user has Employee role",
  "docstatus": 0,
  "doctype": "Server Script",
  "documentation": null,
  "enabled": 1,
  "event_frequency": "All",
  "event_frequency_meta": null,
  "event_frequency_meta_value": null,
  "event_frequency_value": "All",
  "event_type": "DocType",
  "event_type_doc": "Custom Timesheet",
  "event_type_docfield": null,
  "event_type_field": null,
  "event_type_value": "Custom Timesheet",
  "external_service": null,
  "method": "validate",
  "modified": "2025-09-25 19:25:00.000000",
  "name": "Auto Set Employee for Custom Timesheet",
  "priority": 0,
  "reference_doctype": "Custom Timesheet",
  "script": "# Auto set employee for Employee role users\nif frappe.session.user != 'Administrator':\n    # Check if user has Employee role\n    user_roles = frappe.get_roles()\n    if 'Employee' in user_roles:\n        # Get employee linked to this user\n        employee = frappe.db.get_value('Employee', {'user_id': frappe.session.user}, 'name')\n        if employee:\n            doc.employee = employee\n        else:\n            frappe.throw('No employee record found for user {0}'.format(frappe.session.user))",
  "script_type": "DocType Event",
  "script_type_meta": null,
  "script_type_meta_value": null,
  "script_type_value": "DocType Event",
  "sort_order": 0,
  "submitted": 0
 },
 {
  "actions": [],
  "allow_guest_to_view": 0,
  "api_method": null,
  "api_method_name": null,
  "beta": 0,
  "client_script": null,
  "color": null,
  "compatible": null,
  "condition": null,
  "custom": 1,
  "description": "Calculate taken hours from start and end datetime",
  "docstatus": 0,
  "doctype": "Server Script",
  "documentation": null,
  "enabled": 1,
  "event_frequency": "All",
  "event_frequency_meta": null,
  "event_frequency_meta_value": null,
  "event_frequency_value": "All",
  "event_type": "DocType",
  "event_type_doc": "Custom Timesheet Detail",
  "event_type_docfield": null,
  "event_type_field": null,
  "event_type_value": "Custom Timesheet Detail",
  "external_service": null,
  "method": "before_save",
  "modified": "2025-09-25 19:25:00.000000",
  "name": "Calculate Taken Hours",
  "priority": 0,
  "reference_doctype": "Custom Timesheet Detail",
  "script": "# Calculate taken hours with improved validation\nif doc.start_date_time and doc.end_date_time:\n    try:\n        # Parse datetime values\n        start_dt = frappe.utils.get_datetime(doc.start_date_time)\n        end_dt = frappe.utils.get_datetime(doc.end_date_time)\n        \n        if start_dt and end_dt:\n            # Calculate time difference\n            time_diff_seconds = frappe.utils.time_diff_in_seconds(end_dt, start_dt)\n            hours = time_diff_seconds / 3600.0\n            \n            # Handle same start and end time (minimum 0.1 hours)\n            if hours <= 0:\n                frappe.msgprint('Start and End time are the same. Setting minimum 0.1 hours.', alert=True)\n                hours = 0.1\n            \n            # Validate maximum hours (24 hours)\n            if hours > 24:\n                frappe.throw('Working hours cannot exceed 24 hours per day')\n            \n            # Set calculated hours\n            doc.taken_hours = round(hours, 2)\n            \n            # Auto-set week dates in parent timesheet\n            if doc.parent and doc.parenttype == 'Custom Timesheet':\n                try:\n                    parent_doc = frappe.get_doc('Custom Timesheet', doc.parent)\n                    time_log_date = start_dt.date()\n                    \n                    # Auto-set week dates based on time log\n                    if not parent_doc.week_start_date or time_log_date < parent_doc.week_start_date:\n                        parent_doc.week_start_date = time_log_date\n                    if not parent_doc.week_end_date or time_log_date > parent_doc.week_end_date:\n                        parent_doc.week_end_date = time_log_date\n                        \n                    # Save parent document to update week dates\n                    parent_doc.save(ignore_permissions=True)\n                except Exception as e:\n                    # Log error but don't stop the time log save\n                    frappe.log_error(f'Error updating parent timesheet dates: {str(e)}', 'Timesheet Date Update Error')\n        else:\n            doc.taken_hours = 0\n            \n    except frappe.ValidationError:\n        # Re-raise validation errors (these should stop the save)\n        raise\n    except Exception as e:\n        # Log other errors and set hours to 0\n        frappe.log_error(f'Error in time calculation: {str(e)}', 'Time Calculation Error')\n        doc.taken_hours = 0\nelse:\n    # If either datetime is missing, set to 0\n    doc.taken_hours = 0",
  "script_type": "DocType Event",
  "script_type_meta": null,
  "script_type_meta_value": null,
  "script_type_value": "DocType Event",
  "sort_order": 0,
  "submitted": 0
 },
 {
  "actions": [],
  "allow_guest_to_view": 0,
  "api_method": null,
  "api_method_name": null,
  "beta": 0,
  "client_script": null,
  "color": null,
  "compatible": null,
  "condition": null,
  "custom": 1,
  "description": "Update total hours in Custom Timesheet from time logs",
  "docstatus": 0,
  "doctype": "Server Script",
  "documentation": null,
  "enabled": 1,
  "event_frequency": "All",
  "event_frequency_meta": null,
  "event_frequency_meta_value": null,
  "event_frequency_value": "All",
  "event_type": "DocType",
  "event_type_doc": "Custom Timesheet",
  "event_type_docfield": null,
  "event_type_field": null,
  "event_type_value": "Custom Timesheet",
  "external_service": null,
  "method": "validate",
  "modified": "2025-09-25 19:25:00.000000",
  "name": "Update Custom Timesheet Total Hours",
  "priority": 0,
  "reference_doctype": "Custom Timesheet",
  "script": "# Update total hours from time logs\ntotal_hours = 0\n\nif doc.time_logs:\n    for time_log in doc.time_logs:\n        if time_log.taken_hours and time_log.taken_hours > 0:\n            total_hours += float(time_log.taken_hours)\n\n# Ensure total_hours is properly calculated\ndoc.total_hours = round(total_hours, 2)\n\n# Debug logging for troubleshooting\nfrappe.log_error(f'Total hours calculated: {doc.total_hours} from {len(doc.time_logs) if doc.time_logs else 0} time logs', 'Timesheet Total Hours')",
  "script_type": "DocType Event",
  "script_type_meta": null,
  "script_type_meta_value": null,
  "script_type_value": "DocType Event",
  "sort_order": 0,
  "submitted": 0
 },
 {
  "actions": [],
  "allow_guest_to_view": 0,
  "api_method": null,
  "api_method_name": null,
  "beta": 0,
  "client_script": null,
  "color": null,
  "compatible": null,
  "condition": null,
  "custom": 1,
  "description": "Set default status for Employee role users",
  "docstatus": 0,
  "doctype": "Server Script",
  "documentation": null,
  "enabled": 1,
  "event_frequency": "All",
  "event_frequency_meta": null,
  "event_frequency_meta_value": null,
  "event_frequency_value": "All",
  "event_type": "DocType",
  "event_type_doc": "Custom Timesheet",
  "event_type_docfield": null,
  "event_type_field": null,
  "event_type_value": "Custom Timesheet",
  "external_service": null,
  "method": "validate",
  "modified": "2025-09-25 19:25:00.000000",
  "name": "Set Default Status for Employee",
  "priority": 0,
  "reference_doctype": "Custom Timesheet",
  "script": "# Set default status for Employee role users\nif not doc.status:\n    user_roles = frappe.get_roles()\n    if 'Employee' in user_roles:\n        doc.status = 'Draft'",
  "script_type": "DocType Event",
  "script_type_meta": null,
  "script_type_meta_value": null,
  "script_type_value": "DocType Event",
  "sort_order": 0,
  "submitted": 0
 },
 {
  "actions": [],
  "allow_guest_to_view": 0,
  "api_method": null,
  "api_method_name": null,
  "beta": 0,
  "client_script": null,
  "color": null,
  "compatible": null,
  "condition": null,
  "custom": 1,
  "description": "Force recalculate time logs when timesheet is saved",
  "docstatus": 0,
  "doctype": "Server Script",
  "documentation": null,
  "enabled": 1,
  "event_frequency": "Before Save",
  "event_frequency_meta": null,
  "event_frequency_meta_value": null,
  "event_frequency_value": "Before Save",
  "event_type": "DocType",
  "event_type_doc": "Custom Timesheet",
  "event_type_docfield": null,
  "event_type_field": null,
  "event_type_value": "Custom Timesheet",
  "external_service": null,
  "method": "before_save",
  "modified": "2025-09-25 19:25:00.000000",
  "name": "Force Recalculate Time Logs",
  "priority": 0,
  "reference_doctype": "Custom Timesheet",
  "script": "# Force recalculate all time logs to ensure proper hour calculation\nif doc.time_logs:\n    for time_log in doc.time_logs:\n        if time_log.start_date_time and time_log.end_date_time:\n            try:\n                start_dt = frappe.utils.get_datetime(time_log.start_date_time)\n                end_dt = frappe.utils.get_datetime(time_log.end_date_time)\n                \n                if start_dt and end_dt:\n                    time_diff_seconds = frappe.utils.time_diff_in_seconds(end_dt, start_dt)\n                    hours = time_diff_seconds / 3600.0\n                    \n                    # Handle same start and end time (minimum 0.1 hours)\n                    if hours <= 0:\n                        hours = 0.1\n                    \n                    time_log.taken_hours = round(hours, 2)\n                else:\n                    time_log.taken_hours = 0\n            except Exception as e:\n                frappe.log_error(f'Error recalculating time log: {str(e)}', 'Time Log Recalculation Error')\n                time_log.taken_hours = 0",
  "script_type": "DocType Event",
  "script_type_meta": null,
  "script_type_meta_value": null,
  "script_type_value": "DocType Event",
  "sort_order": 0,
  "submitted": 0
 },
 {
  "actions": [],
  "allow_guest_to_view": 0,
  "api_method": null,
  "api_method_name": null,
  "beta": 0,
  "client_script": null,
  "color": null,
  "compatible": null,
  "condition": null,
  "custom": 1,
  "description": "Filter Custom Timesheet list for Employee role users to show only their own timesheets",
  "docstatus": 0,
  "doctype": "Server Script",
  "documentation": null,
  "enabled": 1,
  "event_frequency": "All",
  "event_frequency_meta": null,
  "event_frequency_meta_value": null,
  "event_frequency_value": "All",
  "event_type": "DocType",
  "event_type_doc": "Custom Timesheet",
  "event_type_docfield": null,
  "event_type_field": null,
  "event_type_value": "Custom Timesheet",
  "external_service": null,
  "method": "setup",
  "modified": "2025-09-25 19:25:00.000000",
  "name": "Filter Custom Timesheet List for Employee Role",
  "priority": 0,
  "reference_doctype": "Custom Timesheet",
  "script": "# Filter list view for Employee role users\nif 'Employee' in frappe.get_roles() and frappe.session.user != 'Administrator':\n    # Get employee linked to current user\n    employee = frappe.db.get_value('Employee', {'user_id': frappe.session.user}, 'name')\n    if employee:\n        # Filter to show only timesheets for this employee\n        frappe.local.form_dict.filters = [['employee', '=', employee]]\n    else:\n        # If no employee record found, show no timesheets\n        frappe.local.form_dict.filters = [['employee', '=', '']]",
  "script_type": "DocType Event",
  "script_type_meta": null,
  "script_type_meta_value": null,
  "script_type_value": "DocType Event",
  "sort_order": 0,
  "submitted": 0
 },
 {
  "actions": [],
  "allow_guest_to_view": 0,
  "api_method": null,
  "api_method_name": null,
  "beta": 0,
  "client_script": null,
  "color": null,
  "compatible": null,
  "condition": null,
  "custom": 1,
  "description": "Control Custom Timesheet status field based on user role",
  "docstatus": 0,
  "doctype": "Server Script",
  "documentation": null,
  "enabled": 1,
  "event_frequency": "All",
  "event_frequency_meta": null,
  "event_frequency_meta_value": null,
  "event_frequency_value": "All",
  "event_type": "DocType",
  "event_type_doc": "Custom Timesheet",
  "event_type_docfield": null,
  "event_type_field": null,
  "event_type_value": "Custom Timesheet",
  "external_service": null,
  "method": "setup",
  "modified": "2025-09-25 19:25:00.000000",
  "name": "Control Custom Timesheet Status for Employee Role",
  "priority": 0,
  "reference_doctype": "Custom Timesheet",
  "script": "# Control status field based on user role\nif 'Employee' in frappe.get_roles() and frappe.session.user != 'Administrator':\n    # For Employee role users, limit status options to Draft and Submitted only\n    # Set default status to Draft for new timesheets\n    if not doc.name:\n        doc.status = 'Draft'\n    \n    # For Employee role, they can only change status between Draft and Submitted\n    # Approved and Rejected statuses are controlled by managers/admins\n    if doc.status not in ['Draft', 'Submitted']:\n        # If somehow a non-employee status is set, reset to Draft\n        doc.status = 'Draft'\nelse:\n    # For System Manager and other roles, allow all status options\n    pass",
  "script_type": "DocType Event",
  "script_type_meta": null,
  "script_type_meta_value": null,
  "script_type_value": "DocType Event",
  "sort_order": 0,
  "submitted": 0
 },
 {
  "actions": [],
  "allow_guest_to_view": 0,
  "api_method": null,
  "api_method_name": null,
  "beta": 0,
  "client_script": null,
  "color": null,
  "compatible": null,
  "condition": null,
  "custom": 1,
  "description": "Override Timesheet navigation to redirect to Custom Timesheet",
  "docstatus": 0,
  "doctype": "Server Script",
  "documentation": null,
  "enabled": 1,
  "event_frequency": "All",
  "event_frequency_meta": null,
  "event_frequency_meta_value": null,
  "event_frequency_value": "All",
  "event_type": "DocType",
  "event_type_doc": "Timesheet",
  "event_type_docfield": null,
  "event_type_field": null,
  "event_type_value": "Timesheet",
  "external_service": null,
  "method": "setup",
  "modified": "2025-09-25 19:30:00.000000",
  "name": "Override Timesheet Navigation",
  "priority": 0,
  "reference_doctype": "Timesheet",
  "script": "# Override Timesheet navigation to redirect to Custom Timesheet\n# This script will redirect any Timesheet access to Custom Timesheet\n\n# Check if this is a Timesheet request\nif frappe.local.request and frappe.local.request.path:\n    if '/app/timesheet' in frappe.local.request.path or '/app/Timesheet' in frappe.local.request.path:\n        # Redirect to Custom Timesheet\n        frappe.local.response['type'] = 'redirect'\n        frappe.local.response['location'] = '/app/custom-timesheet'\n        frappe.local.response['status'] = 302\n        \n# Also handle any direct Timesheet doctype access\nif frappe.local.request and frappe.local.request.path:\n    if '/app/timesheet' in frappe.local.request.path or '/app/Timesheet' in frappe.local.request.path:\n        # Force redirect to Custom Timesheet\n        frappe.local.response['type'] = 'redirect'\n        frappe.local.response['location'] = '/app/custom-timesheet'\n        frappe.local.response['status'] = 302\n        \n# Handle route history requests\nif frappe.local.request and frappe.local.request.path:\n    if 'route_history' in frappe.local.request.path and 'Timesheet' in str(frappe.local.request.get('routes', '')):\n        # Override route history to use Custom Timesheet\n        frappe.local.response['type'] = 'redirect'\n        frappe.local.response['location'] = '/app/custom-timesheet'\n        frappe.local.response['status'] = 302",
  "script_type": "DocType Event",
  "script_type_meta": null,
  "script_type_meta_value": null,
  "script_type_value": "DocType Event",
  "sort_order": 0,
  "submitted": 0
 }
]